#version: '3.8'
#
#services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.0.1
#    container_name: zookeeper
##    ports:
##      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: "2181"
#      ZOOKEEPER_TICK_TIME: "2000"
#
#  broker:
#    image: confluentinc/cp-kafka:7.0.1
#    container_name: broker
#    depends_on:
#      - zookeeper
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_LOG_REPLICATION_FACTOR: 1




#
version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  discovery-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: discovery-service
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAR_FILE=discovery-server-0.0.1-SNAPSHOT.jar
      - SERVICE_NAME=discovery-service

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
      - JAR_FILE=api-gateway-0.0.1-SNAPSHOT.jar
      - SERVICE_NAME=api-gateway
    depends_on:
      - discovery-service

  product-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "0:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:8091/project
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=kamal2002
      - JAR_FILE=product-service-0.0.1-SNAPSHOT.jar
      - SERVICE_NAME=product-service
    depends_on:
      - discovery-service
      - api-gateway

  order-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:8091/project
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=kamal2002
      - JAR_FILE=order-service-0.0.1-SNAPSHOT.jar
      - SERVICE_NAME=order-service
    depends_on:
      - broker
      - discovery-service
      - api-gateway

  inventory-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory-service
    ports:
      - "0:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:8091/project
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=kamal2002
      - JAR_FILE=inventory-service-0.0.1-SNAPSHOT.jar
      - SERVICE_NAME=inventory-service
    depends_on:
      - discovery-service
      - api-gateway

  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "0:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAR_FILE=notification-service-0.0.1-SNAPSHOT.jar
      - SERVICE_NAME=notification-service
    depends_on:
      - broker
      - discovery-service
      - api-gateway



#version: '3.8'
#services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.0.1
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: "2181"
#      ZOOKEEPER_TICK_TIME: "2000"
#
#  broker:
#    image: confluentinc/cp-kafka:7.0.1
#    container_name: broker
#    depends_on:
#      - zookeeper
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#
#  discovery-service:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: discovery-service
#    ports:
#      - "8761:8761"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - JAR_FILE=discovery-server-0.0.1-SNAPSHOT.jar
#      - SERVICE_NAME=discovery-service
#
#  api-gateway:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: api-gateway
#    ports:
#      - "8080:8080"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
#      - JAR_FILE=api-gateway-0.0.1-SNAPSHOT.jar
#      - SERVICE_NAME=api-gateway
#    depends_on:
#      - discovery-service
#
#  product-service:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: product-service
#    ports:
#      - "0:8080"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:8091/project
#      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
#      - SPRING_DATASOURCE_USERNAME=root
#      - SPRING_DATASOURCE_PASSWORD=kamal2002
#      - JAR_FILE=product-service-0.0.1-SNAPSHOT.jar
#      - SERVICE_NAME=product-service
##      - SPRING_ZIPKIN_BASE_URL=http://host.docker.internal::9411
##      - MANAGEMENT_ZIPKIN_ENDPOINT=http://host.docker.internal::9411/api/v2/spans
#    depends_on:
#      - discovery-service
#      - api-gateway
#      - zipkin
#
#  order-service:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: order-service
#    ports:
#      - "8085:8085"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:8091/project
#      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
#      - SPRING_DATASOURCE_USERNAME=root
#      - SPRING_DATASOURCE_PASSWORD=kamal2002
#      - JAR_FILE=order-service-0.0.1-SNAPSHOT.jar
#      - SERVICE_NAME=order-service
##      - SPRING_ZIPKIN_BASE_URL=http://host.docker.internal::9411
##      - MANAGEMENT_ZIPKIN_ENDPOINT=http://host.docker.internal::9411/api/v2/spans
#    depends_on:
#      - broker
#      - discovery-service
#      - api-gateway
##      - zipkin
#
#  inventory-service:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: inventory-service
#    ports:
#      - "0:8080"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:8091/project
#      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
#      - SPRING_DATASOURCE_USERNAME=root
#      - SPRING_DATASOURCE_PASSWORD=kamal2002
#      - JAR_FILE=inventory-service-0.0.1-SNAPSHOT.jar
#      - SERVICE_NAME=inventory-service
##      - SPRING_ZIPKIN_BASE_URL=http://host.docker.internal::9411
##      - MANAGEMENT_ZIPKIN_ENDPOINT=http://host.docker.internal::9411/api/v2/spans
#    depends_on:
#      - discovery-service
#      - api-gateway
##      - zipkin
#
#  notification-service:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: notification-service
#    ports:
#      - "0:8080"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - JAR_FILE=notification-service-0.0.1-SNAPSHOT.jar
#      - SERVICE_NAME=notification-service
##      - SPRING_ZIPKIN_BASE_URL=http://host.docker.internal::9411
##      - MANAGEMENT_ZIPKIN_ENDPOINT=http://host.docker.internal::9411/api/v2/spans
#    depends_on:
#      - broker
#      - discovery-service
#      - api-gateway
##      - zipkin
